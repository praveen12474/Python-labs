class Node:
 def __init__(self, data):
 self.data = data
 self.next = None
class Queue:
 def __init__(self):
 self.front = None
 self.rear = None
 def enqueue(self, value):
 new_node = Node(value)
 if self.rear is None:
 self.front = self.rear = new_node
 else:
 self.rear.next = new_node
 self.rear = new_node
 print(f"{value} enqueued to queue.")
 def dequeue(self):
 if self.front is None:
 print("Queue is EMPTY! Cannot dequeue.")
 else:
 removed = self.front.data
 self.front = self.front.next
 if self.front is None:
 self.rear = None
 print(f"{removed} dequeued from queue.")
 def display(self):
 if self.front is None:
 print("Queue is EMPTY!")
 else:
 print("Queue elements are:")
 temp = self.front
 while temp is not None:
 print(f"{temp.data} --> ", end="")
 temp = temp.next
 print("NULL")
queue = Queue()
while True:
 print("\n--- Linked List Queue Menu ---")
 print("1. Enqueue")
 print("2. Dequeue")
 print("3. Display")
 print("4. Exit")
 choice = input("Enter your choice (1-4): ")
 if choice == '1':
 value = input("Enter value to enqueue: ")
 queue.enqueue(value)
 elif choice == '2':
 queue.dequeue()
 elif choice == '3':
 queue.display()
 elif choice == '4':
 print("Exiting program. Goodbye!")
 break
 else:
 print("Invalid choice. Please try again.")
